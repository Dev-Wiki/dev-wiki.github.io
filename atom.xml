<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[DevWiki's Blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com//"/>
  <updated>2015-06-18T11:21:56.666Z</updated>
  <id>http://yoursite.com//</id>
  
  <author>
    <name><![CDATA[DevWiki]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[AndroidStudio中aar文件引用]]></title>
    <link href="http://yoursite.com/2015/06/18/AndroidStudio-export-aar/"/>
    <id>http://yoursite.com/2015/06/18/AndroidStudio-export-aar/</id>
    <published>2015-06-18T11:21:56.666Z</published>
    <updated>2015-06-18T11:21:56.666Z</updated>
    <content type="html"><![CDATA[<p>最近在看一个项目,里面将一个库项目打包成了aar文件.在项目中引用时如下:</p>
<p>项目目录如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Demo&#10;    |-app&#10;    |-IMDemo&#10;    |-imkit</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>其中imkit为打包aar格式的项目,其在项目中的结构如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">imkit&#10;    |-build.gradle&#10;    |-imkit.iml&#10;    |-imkit-1.0.0.aar</span><br></pre></td></tr></table></figure></p>
<p>其中build.gradle文件如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">configurations.create(&#34;default&#34;)&#10;artifacts.add(&#34;default&#34;, file(&#39;imkit-1.0.0.aar&#39;))</span><br></pre></td></tr></table></figure></p>
<p>app和IMDemo中的build.gradle中包含有以下内容:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;&#10;    compile project(&#39;:imkit&#39;)&#10;&#125;</span><br></pre></td></tr></table></figure></p>
<p>在整个项目的setting.gradle文件中为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include &#39;:app&#39;, &#39;:imkit&#39;, &#34;:IMDemo&#34;</span><br></pre></td></tr></table></figure></p>
<p>这样整个项目可以正常运行.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近在看一个项目,里面将一个库项目打包成了aar文件.在项目中引用时如下:</p>
<p>项目目录如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Demo&#10;    |-app&#10;    |-IMDemo&#10;    |-imkit</span><br></pre></td></tr></table></figure></p>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Java设计模式---观察者模式]]></title>
    <link href="http://yoursite.com/2015/06/18/Java-Design-Pattern-Observer/"/>
    <id>http://yoursite.com/2015/06/18/Java-Design-Pattern-Observer/</id>
    <published>2015-06-18T11:21:53.624Z</published>
    <updated>2015-06-18T11:21:53.624Z</updated>
    <content type="html"><![CDATA[<h2 id="故事概要">故事概要</h2><h3 id="概要">概要</h3><p>故事要从一个业务需求开始:</p>
<blockquote>
<p>天气监测站目前可以监测到气温,气压,湿度三种指标,有一个WeatherData类,当前面的三个数据发生变化时,就会调用WeatherData类的setWeatherData()方法,改变天气数据.</p>
</blockquote>
<p>现在要求:需要有两个显示装置显示现在的状态和平均状态.当监测的数据有变化时,就更新显示.而且需要提供给第三方的人员可调用这些数据以设置想要的显示装置.如下图:</p>
<a id="more"></a>
<p><img src="https://raw.githubusercontent.com/sn10086/DesignPattern/master/Observer/Observer01.png" alt="业务需求图"></p>
<p>下面是给出的WeatherData类:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WeatherData</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> temp;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> humidity;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> pressure;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WeatherData</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWeatherData</span><span class="params">(<span class="keyword">float</span> temp, <span class="keyword">float</span> humidity, <span class="keyword">float</span> pressure)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.temp = temp;</span><br><span class="line">        <span class="keyword">this</span>.humidity = humidity;</span><br><span class="line">        <span class="keyword">this</span>.pressure = pressure;</span><br><span class="line">        dataChanged();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dataChanged</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//数据发生变化则调用此方法,可在此处填写你的代码</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getTemp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> temp;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getHumidity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> humidity;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getPressure</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pressure;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="提取已知条件">提取已知条件</h3><p>目前已知的条件:</p>
<ol>
<li>WeatherData具有三个getter方法,可获取到温度,气压和湿度三个数值.</li>
<li>当监测到新的数据时就会调用dataChanged()方法.</li>
<li>需要实现两个显示器,一个显示当前状况(CurrentConditionsDisplay),一个显示平均状态(AvgStateDisplay).</li>
<li>系统要能扩展,第三方可以组合实现显示器.</li>
</ol>
<h3 id="简单实现">简单实现</h3><p>根据以上前提,可以用以下方法实现:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dataChanged</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//数据发生变化则调用此方法,可在此处填写你的代码</span></span><br><span class="line">    currentConditionsDisplay.update(temp, humidity, pressure);</span><br><span class="line">    avgStateDisplay.update(temp, humidity, pressure);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>其中,CurrentConditionsDisplay和AvgStateDisplay如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示当前状态</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CurrentConditionsDisplay</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> temp;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> humidity;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> pressure;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">float</span> temp, <span class="keyword">float</span> humidity, <span class="keyword">float</span> pressure)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.temp = temp;</span><br><span class="line">        <span class="keyword">this</span>.humidity = humidity;</span><br><span class="line">        <span class="keyword">this</span>.pressure = pressure;</span><br><span class="line">        display();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//显示当前状态</span></span><br><span class="line">        String displayData = <span class="string">"CurrentConditions[temp="</span> + temp + <span class="string">", humidity="</span> + humidity + </span><br><span class="line">            <span class="string">", pressure="</span>+ pressure + <span class="string">"]"</span>;</span><br><span class="line">        System.out.println(displayData);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//显示平均状态</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AvgStateDisplay</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(getShowInfo());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getShowInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StringBuilder displayData = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">if</span> (tempList.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            displayData.append(<span class="string">"暂时没有数据..."</span>);</span><br><span class="line">            <span class="keyword">return</span> displayData.toString();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">float</span> tempAve = calculatorAve(tempList);</span><br><span class="line">        displayData.append(<span class="string">"平均气温:"</span> + tempAve);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">float</span> humidityAve = calculatorAve(humidityList);</span><br><span class="line">        displayData.append(<span class="string">",平均湿度:"</span> + humidityAve);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">float</span> pressureAve = calculatorAve(pressureList);</span><br><span class="line">        displayData.append(<span class="string">",平均压强:"</span> + pressureAve);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> displayData.toString();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">float</span> <span class="title">calculatorAve</span><span class="params">(List&lt;Float&gt; dataList)</span></span>&#123;</span><br><span class="line">        <span class="keyword">float</span> sum = <span class="number">0F</span>;</span><br><span class="line">        <span class="keyword">for</span> (Float float1 : dataList) &#123;</span><br><span class="line">            sum = sum + float1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">float</span> ave = sum/dataList.size();</span><br><span class="line">        <span class="keyword">return</span> ave;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> List&lt;Float&gt; tempList;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> temp;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Float&gt; humidityList;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> humidity;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Float&gt; pressureList;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> pressure;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">float</span> temp, <span class="keyword">float</span> humidity, <span class="keyword">float</span> pressure)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.temp = temp;</span><br><span class="line">        <span class="keyword">this</span>.humidity = humidity;</span><br><span class="line">        <span class="keyword">this</span>.pressure = pressure;</span><br><span class="line">        <span class="keyword">if</span> (tempList == <span class="keyword">null</span>) &#123;</span><br><span class="line">            tempList = <span class="keyword">new</span> ArrayList&lt;Float&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        tempList.add(temp);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (humidityList == <span class="keyword">null</span>) &#123;</span><br><span class="line">            humidityList = <span class="keyword">new</span> ArrayList&lt;Float&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        humidityList.add(humidity);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (pressureList == <span class="keyword">null</span>) &#123;</span><br><span class="line">            pressureList = <span class="keyword">new</span> ArrayList&lt;Float&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        pressureList.add(pressure);</span><br><span class="line">        display();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这不就实现了刚才的功能:</p>
<ol>
<li>能显示当前状态</li>
<li>能显示平均状态</li>
<li>第三方可以通过WeatherData的dataChanged()方法获取数据,自己任意显示.</li>
</ol>
<h2 id="有没有问题?">有没有问题?</h2><p>上一篇文章学习了Java设计的原则:</p>
<blockquote>
<p>封装变化和面向接口编程</p>
</blockquote>
<p>上述的实现中:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dataChanged</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//数据发生变化则调用此方法,可在此处填写你的代码</span></span><br><span class="line">    currentConditionsDisplay.update(temp, humidity, pressure);</span><br><span class="line">    avgStateDisplay.update(temp, humidity, pressure);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这个里面的3,4两句是变化的,这部分没有封装.而且应该面向接口编程而不是面向具体的类编程,如果增加第三方的显示器,只能修改此处添加代码</p>
<h2 id="认识观察者模式">认识观察者模式</h2><h3 id="从订阅报纸开始">从订阅报纸开始</h3><p>报纸的订阅过程一般如下:</p>
<ul>
<li>报社的业务就是出版报纸。</li>
<li>向某家报社订阅报纸，只要他们有新报纸出版，就会给你送来。只要你是他们的订户，你就会一直收到新报纸。</li>
<li>当你不想再看报纸的时候，取消订阅，他们就不会再送新报纸来。</li>
<li>只要报社还在运营，就会一直有人（或单位）向他们订阅报纸或取消订阅报纸。</li>
</ul>
<p>观察者模式就和上面的订报纸差不多:</p>
<blockquote>
<p>出版者改称为“主题”（Subject），订阅者改称为“观察者”（Observer）</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/sn10086/DesignPattern/master/Observer/Observer02.png" alt="观察者模式"></p>
<p><img src="https://raw.githubusercontent.com/sn10086/DesignPattern/master/Observer/Observer03.png" alt="观察者模式"></p>
<p><img src="https://raw.githubusercontent.com/sn10086/DesignPattern/master/Observer/Observer04.png" alt="观察者模式"></p>
<p><img src="https://raw.githubusercontent.com/sn10086/DesignPattern/master/Observer/Observer05.png" alt="观察者模式"></p>
<p><img src="https://raw.githubusercontent.com/sn10086/DesignPattern/master/Observer/Observer06.png" alt="观察者模式"></p>
<h3 id="定义观察者模式">定义观察者模式</h3><blockquote>
<p>定义了对象之间的一对多依赖，这样一来，当一个对象改变状态时，它的所有依赖者都会收到通知并自动更新。</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/sn10086/DesignPattern/master/Observer/Observer07.png" alt="观察者模式"></p>
<h3 id="观察者模式的类图">观察者模式的类图</h3><p><img src="https://raw.githubusercontent.com/sn10086/DesignPattern/master/Observer/Observer08.png" alt="观察者模式类图"></p>
<p>从以上类图可以看出,观察者模式的是遵守针对接口编程原则的.</p>
<h2 id="手动实现气象站的观察者模式">手动实现气象站的观察者模式</h2><h3 id="1-观察者接口">1.观察者接口</h3><p>观察者是一个接口:Observer<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Observer</span> </span>&#123;</span><br><span class="line">    <span class="comment">//用于更新的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">float</span> temp, <span class="keyword">float</span> humidity, <span class="keyword">float</span> pressure)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="2-观察对象接口">2.观察对象接口</h3><p>贯彻对象接口有三个作用:</p>
<ol>
<li>观察者注册为观察者</li>
<li>观察者解除注册</li>
<li>数据更新时通知观察者</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Subject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注册为观察者</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">registerObserver</span><span class="params">(Observer observer)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//解除注册</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">unregisterObserver</span><span class="params">(Observer observer)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//通知观察者</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">notifyObserver</span><span class="params">()</span></span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-新的WeatherData类">3.新的WeatherData类</h3><p>其中的setter是给气象站设置数据使用.getter是给第三方获取数据使用</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WeatherData</span> <span class="keyword">implements</span> <span class="title">Subject</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> temp;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> humidity;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> pressure;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Observer&gt; observerList;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WeatherData</span><span class="params">()</span></span>&#123;</span><br><span class="line">        observerList = <span class="keyword">new</span> ArrayList&lt;Observer&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWeatherData</span><span class="params">(<span class="keyword">float</span> temp, <span class="keyword">float</span> humidity, <span class="keyword">float</span> pressure)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.temp = temp;</span><br><span class="line">        <span class="keyword">this</span>.humidity = humidity;</span><br><span class="line">        <span class="keyword">this</span>.pressure = pressure;</span><br><span class="line">        dataChanged();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dataChanged</span><span class="params">()</span></span>&#123;</span><br><span class="line">        notifyObserver();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerObserver</span><span class="params">(Observer observer)</span> </span>&#123;</span><br><span class="line">        observerList.add(observer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unregisterObserver</span><span class="params">(Observer observer)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> index = observerList.indexOf(observer);</span><br><span class="line">        <span class="keyword">if</span> (index &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            observerList.remove(observer);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notifyObserver</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Observer observer : observerList) &#123;</span><br><span class="line">            observer.update(temp, humidity, pressure);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getTemp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> temp;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTemp</span><span class="params">(<span class="keyword">float</span> temp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.temp = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getHumidity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> humidity;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHumidity</span><span class="params">(<span class="keyword">float</span> humidity)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.humidity = humidity;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getPressure</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pressure;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPressure</span><span class="params">(<span class="keyword">float</span> pressure)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pressure = pressure;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4-显示器接口">4.显示器接口</h3><p>显示器接口是用来实现各种显示器的<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DisplayElement</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="5-显示器的实现类:CurrentConditionsDisplay和AvgStateDisplay类">5.显示器的实现类:CurrentConditionsDisplay和AvgStateDisplay类</h3><p>CurrentConditionsDisplay:当前状态显示器<br>AvgStateDisplay:平均状态显示器</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CurrentConditionsDisplay</span> <span class="keyword">implements</span> <span class="title">Observer</span>, <span class="title">DisplayElement</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> WeatherData weatherData;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CurrentConditionsDisplay</span><span class="params">(WeatherData weatherData)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.weatherData = weatherData;</span><br><span class="line">        weatherData.registerObserver(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unregister</span><span class="params">()</span></span>&#123;</span><br><span class="line">        weatherData.unregisterObserver(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String displayData = <span class="string">"CurrentConditions[temp="</span> + temp + <span class="string">", humidity="</span> + humidity + <span class="string">", pressure="</span></span><br><span class="line">                + pressure + <span class="string">"]"</span>;</span><br><span class="line">        System.out.println(displayData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> temp;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> humidity;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> pressure;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">float</span> temp, <span class="keyword">float</span> humidity, <span class="keyword">float</span> pressure)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.temp = temp;</span><br><span class="line">        <span class="keyword">this</span>.humidity = humidity;</span><br><span class="line">        <span class="keyword">this</span>.pressure = pressure;</span><br><span class="line">        display();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//---------------------------------------------------------------//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AvgStateDisplay</span> <span class="keyword">implements</span> <span class="title">Observer</span>, <span class="title">DisplayElement</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> WeatherData weatherData;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AvgStateDisplay</span><span class="params">(WeatherData weatherData)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.weatherData = weatherData;</span><br><span class="line">        weatherData.registerObserver(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unregister</span><span class="params">()</span></span>&#123;</span><br><span class="line">        weatherData.unregisterObserver(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(getShowInfo());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getShowInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StringBuilder displayData = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">if</span> (tempList.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            displayData.append(<span class="string">"暂时没有数据..."</span>);</span><br><span class="line">            <span class="keyword">return</span> displayData.toString();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">float</span> tempAve = calculatorAve(tempList);</span><br><span class="line">        displayData.append(<span class="string">"平均气温:"</span> + tempAve);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">float</span> humidityAve = calculatorAve(humidityList);</span><br><span class="line">        displayData.append(<span class="string">",平均湿度:"</span> + humidityAve);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">float</span> pressureAve = calculatorAve(pressureList);</span><br><span class="line">        displayData.append(<span class="string">",平均压强:"</span> + pressureAve);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> displayData.toString();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">float</span> <span class="title">calculatorAve</span><span class="params">(List&lt;Float&gt; dataList)</span></span>&#123;</span><br><span class="line">        <span class="keyword">float</span> sum = <span class="number">0F</span>;</span><br><span class="line">        <span class="keyword">for</span> (Float float1 : dataList) &#123;</span><br><span class="line">            sum = sum + float1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">float</span> ave = sum/dataList.size();</span><br><span class="line">        <span class="keyword">return</span> ave;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> List&lt;Float&gt; tempList;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> temp;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Float&gt; humidityList;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> humidity;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Float&gt; pressureList;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> pressure;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">float</span> temp, <span class="keyword">float</span> humidity, <span class="keyword">float</span> pressure)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.temp = temp;</span><br><span class="line">        <span class="keyword">this</span>.humidity = humidity;</span><br><span class="line">        <span class="keyword">this</span>.pressure = pressure;</span><br><span class="line">        <span class="keyword">if</span> (tempList == <span class="keyword">null</span>) &#123;</span><br><span class="line">            tempList = <span class="keyword">new</span> ArrayList&lt;Float&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        tempList.add(temp);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (humidityList == <span class="keyword">null</span>) &#123;</span><br><span class="line">            humidityList = <span class="keyword">new</span> ArrayList&lt;Float&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        humidityList.add(humidity);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (pressureList == <span class="keyword">null</span>) &#123;</span><br><span class="line">            pressureList = <span class="keyword">new</span> ArrayList&lt;Float&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        pressureList.add(pressure);</span><br><span class="line">        display();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="6-测试">6.测试</h3><p>测试气象站数据变化时能否通知当前状态显示器和平均状态显示器更新数据<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WeatherStation</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        WeatherData weatherData = <span class="keyword">new</span> WeatherData();</span><br><span class="line">        </span><br><span class="line">        CurrentConditionsDisplay currentDisplay = <span class="keyword">new</span> CurrentConditionsDisplay(weatherData);</span><br><span class="line">        AvgStateDisplay stateDisplay = <span class="keyword">new</span> AvgStateDisplay(weatherData);</span><br><span class="line">        </span><br><span class="line">        weatherData.setWeatherData(<span class="number">25.0F</span>, <span class="number">80F</span>, <span class="number">1.01F</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        weatherData.setWeatherData(<span class="number">26.2F</span>, <span class="number">76F</span>, <span class="number">1.02F</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        weatherData.setWeatherData(<span class="number">27.8F</span>, <span class="number">70F</span>, <span class="number">1.01F</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>输出结果为:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CurrentConditions[temp=<span class="number">25.0</span>, humidity=<span class="number">80.0</span>, pressure=<span class="number">1.01</span>]</span><br><span class="line">平均气温:<span class="number">25.0</span>,平均湿度:<span class="number">80.0</span>,平均压强:<span class="number">1.01</span></span><br><span class="line">CurrentConditions[temp=<span class="number">26.2</span>, humidity=<span class="number">76.0</span>, pressure=<span class="number">1.02</span>]</span><br><span class="line">平均气温:<span class="number">25.6</span>,平均湿度:<span class="number">78.0</span>,平均压强:<span class="number">1.015</span></span><br><span class="line">CurrentConditions[temp=<span class="number">27.8</span>, humidity=<span class="number">70.0</span>, pressure=<span class="number">1.01</span>]</span><br><span class="line">平均气温:<span class="number">26.333334</span>,平均湿度:<span class="number">75.333336</span>,平均压强:<span class="number">1.0133333</span></span><br></pre></td></tr></table></figure></p>
<h3 id="7-增加酷热指数的显示器:HeatIndexDisplay">7.增加酷热指数的显示器:HeatIndexDisplay</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HeatIndexDisplay</span> <span class="keyword">implements</span> <span class="title">Observer</span>, <span class="title">DisplayElement</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> WeatherData weatherData;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HeatIndexDisplay</span><span class="params">(WeatherData weatherData)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.weatherData = weatherData;</span><br><span class="line">        weatherData.registerObserver(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unregister</span><span class="params">()</span></span>&#123;</span><br><span class="line">        weatherData.unregisterObserver(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"当前酷热指数:"</span> + getHeatIndex());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">float</span> <span class="title">getHeatIndex</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">float</span> heatIndex = <span class="number">0F</span>;</span><br><span class="line">        <span class="comment">//此处酷热指数计算公式不正确,是随意写的</span></span><br><span class="line">        heatIndex = (<span class="keyword">float</span>) (temp*Math.PI + humidity*Math.E + pressure*<span class="number">1.01315</span>)/<span class="number">5</span>;</span><br><span class="line">        <span class="keyword">return</span> heatIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> temp;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> humidity;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> pressure;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">float</span> temp, <span class="keyword">float</span> humidity, <span class="keyword">float</span> pressure)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.temp = temp;</span><br><span class="line">        <span class="keyword">this</span>.humidity = humidity;</span><br><span class="line">        <span class="keyword">this</span>.pressure = pressure;</span><br><span class="line">        display();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="8-测试第三方的显示器">8.测试第三方的显示器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WeatherStation</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        WeatherData weatherData = <span class="keyword">new</span> WeatherData();</span><br><span class="line">        </span><br><span class="line">        CurrentConditionsDisplay currentDisplay = <span class="keyword">new</span> CurrentConditionsDisplay(weatherData);</span><br><span class="line">        AvgStateDisplay stateDisplay = <span class="keyword">new</span> AvgStateDisplay(weatherData);</span><br><span class="line">        HeatIndexDisplay heatIndexDisplay = <span class="keyword">new</span> HeatIndexDisplay(weatherData);</span><br><span class="line">        </span><br><span class="line">        weatherData.setWeatherData(<span class="number">25.0F</span>, <span class="number">80F</span>, <span class="number">1.01F</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        weatherData.setWeatherData(<span class="number">26.2F</span>, <span class="number">76F</span>, <span class="number">1.02F</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        weatherData.setWeatherData(<span class="number">27.8F</span>, <span class="number">70F</span>, <span class="number">1.01F</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>测试结果如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CurrentConditions[temp=<span class="number">25.0</span>, humidity=<span class="number">80.0</span>, pressure=<span class="number">1.01</span>]</span><br><span class="line">平均气温:<span class="number">25.0</span>,平均湿度:<span class="number">80.0</span>,平均压强:<span class="number">1.01</span></span><br><span class="line">当前酷热指数:<span class="number">59.40513</span></span><br><span class="line">CurrentConditions[temp=<span class="number">26.2</span>, humidity=<span class="number">76.0</span>, pressure=<span class="number">1.02</span>]</span><br><span class="line">平均气温:<span class="number">25.6</span>,平均湿度:<span class="number">78.0</span>,平均压强:<span class="number">1.015</span></span><br><span class="line">当前酷热指数:<span class="number">57.98651</span></span><br><span class="line">CurrentConditions[temp=<span class="number">27.8</span>, humidity=<span class="number">70.0</span>, pressure=<span class="number">1.01</span>]</span><br><span class="line">平均气温:<span class="number">26.333334</span>,平均湿度:<span class="number">75.333336</span>,平均压强:<span class="number">1.0133333</span></span><br><span class="line">当前酷热指数:<span class="number">55.727856</span></span><br></pre></td></tr></table></figure></p>
<h3 id="小结">小结</h3><p>经过以上测试,我们使用了观察者模式实现了:</p>
<ol>
<li>气象站测试到数据—&gt;发布数据变更—-&gt;更新各个不同类型的显示器.</li>
<li>实现了当前状况的显示和平均状态的显示</li>
<li>开发者可是自行实现多种形式的显示器</li>
</ol>
<h2 id="Java内置的观察者模式">Java内置的观察者模式</h2><h3 id="Java内置的主题">Java内置的主题</h3><p>Java内部的主题存在java.util包下,其源码如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Observable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> changed = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">private</span> Vector&lt;Observer&gt; obs;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Observable</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        obs = <span class="keyword">new</span> Vector&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">addObserver</span><span class="params">(Observer o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException();</span><br><span class="line">        <span class="keyword">if</span> (!obs.contains(o)) &#123;</span><br><span class="line">            obs.addElement(o);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">deleteObserver</span><span class="params">(Observer o)</span> </span>&#123;</span><br><span class="line">        obs.removeElement(o);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notifyObservers</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        notifyObservers(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notifyObservers</span><span class="params">(Object arg)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">        Object[] arrLocal;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!changed)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            arrLocal = obs.toArray();</span><br><span class="line">            clearChanged();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = arrLocal.length-<span class="number">1</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">            ((Observer)arrLocal[i]).update(<span class="keyword">this</span>, arg);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">deleteObservers</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        obs.removeAllElements();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">setChanged</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        changed = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">clearChanged</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        changed = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">boolean</span> <span class="title">hasChanged</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> changed;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">int</span> <span class="title">countObservers</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> obs.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>内置的主题类提供:增加观察者,删除观察者,删除所有观察者,提醒某个观察者,提醒所有观察者,获取观察者的数量,设置数据变化等方法.</p>
<p>与自定义的主题不同的是:</p>
<ol>
<li>java内置的主题是一个类不是一个接口.</li>
<li>java内置的主题必须手动设置数据变化,即setChanged().否则主题不会通知观察者.</li>
</ol>
<h3 id="Java内置的观察者">Java内置的观察者</h3><p>java内置的主题在java.util包下,其源码如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Observer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(Observable o, Object arg)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>与自定义的观察者一致.</p>
<h2 id="使用Java内置的观察者模式实现气象站">使用Java内置的观察者模式实现气象站</h2><h3 id="WeatherData类">WeatherData类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WeatherData</span> <span class="keyword">extends</span> <span class="title">Observable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> temp;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> humidity;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> pressure;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WeatherData</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWeatherData</span><span class="params">(<span class="keyword">float</span> temp, <span class="keyword">float</span> humidity, <span class="keyword">float</span> pressure)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.temp = temp;</span><br><span class="line">        <span class="keyword">this</span>.humidity = humidity;</span><br><span class="line">        <span class="keyword">this</span>.pressure = pressure;</span><br><span class="line">        dataChanged();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dataChanged</span><span class="params">()</span></span>&#123;</span><br><span class="line">        setChanged();</span><br><span class="line">        notifyObservers();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getTemp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> temp;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getHumidity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> humidity;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getPressure</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pressure;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="CurrentConditionsDisplay">CurrentConditionsDisplay</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CurrentConditionsDisplay</span> <span class="keyword">implements</span> <span class="title">Observer</span>, <span class="title">DisplayElement</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Observable observable;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CurrentConditionsDisplay</span><span class="params">(Observable observable)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.observable = observable;</span><br><span class="line">        observable.addObserver(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unregister</span><span class="params">()</span></span>&#123;</span><br><span class="line">        observable.deleteObserver(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String displayData = <span class="string">"CurrentConditions[temp="</span> + temp + <span class="string">", humidity="</span> + humidity + <span class="string">", pressure="</span></span><br><span class="line">                + pressure + <span class="string">"]"</span>;</span><br><span class="line">        System.out.println(displayData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> temp;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> humidity;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> pressure;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Observable o, Object arg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (o <span class="keyword">instanceof</span> WeatherData) &#123;</span><br><span class="line">            WeatherData weatherData = (WeatherData) o;</span><br><span class="line">            <span class="keyword">this</span>.temp = weatherData.getTemp();</span><br><span class="line">            <span class="keyword">this</span>.humidity = weatherData.getHumidity();</span><br><span class="line">            <span class="keyword">this</span>.pressure = weatherData.getPressure();</span><br><span class="line">            display();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="AvgStateDisplay">AvgStateDisplay</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AvgStateDisplay</span> <span class="keyword">implements</span> <span class="title">Observer</span>, <span class="title">DisplayElement</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> Observable observable;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AvgStateDisplay</span><span class="params">(Observable observable)</span></span>&#123;</span><br><span class="line">        observable.addObserver(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">this</span>.observable = observable;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unregister</span><span class="params">()</span></span>&#123;</span><br><span class="line">        observable.deleteObserver(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(getShowInfo());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getShowInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StringBuilder displayData = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">if</span> (tempList.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            displayData.append(<span class="string">"暂时没有数据..."</span>);</span><br><span class="line">            <span class="keyword">return</span> displayData.toString();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">float</span> tempAve = calculatorAve(tempList);</span><br><span class="line">        displayData.append(<span class="string">"平均气温:"</span> + tempAve);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">float</span> humidityAve = calculatorAve(humidityList);</span><br><span class="line">        displayData.append(<span class="string">",平均湿度:"</span> + humidityAve);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">float</span> pressureAve = calculatorAve(pressureList);</span><br><span class="line">        displayData.append(<span class="string">",平均压强:"</span> + pressureAve);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> displayData.toString();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">float</span> <span class="title">calculatorAve</span><span class="params">(List&lt;Float&gt; dataList)</span></span>&#123;</span><br><span class="line">        <span class="keyword">float</span> sum = <span class="number">0F</span>;</span><br><span class="line">        <span class="keyword">for</span> (Float float1 : dataList) &#123;</span><br><span class="line">            sum = sum + float1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">float</span> ave = sum/dataList.size();</span><br><span class="line">        <span class="keyword">return</span> ave;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> List&lt;Float&gt; tempList;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> temp;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Float&gt; humidityList;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> humidity;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Float&gt; pressureList;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> pressure;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Observable o, Object arg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (o <span class="keyword">instanceof</span> WeatherData) &#123;</span><br><span class="line">            WeatherData weatherData = (WeatherData) o;</span><br><span class="line">            <span class="keyword">this</span>.temp = weatherData.getTemp();</span><br><span class="line">            <span class="keyword">this</span>.humidity = weatherData.getHumidity();</span><br><span class="line">            <span class="keyword">this</span>.pressure = weatherData.getPressure();</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (tempList == <span class="keyword">null</span>) &#123;</span><br><span class="line">                tempList = <span class="keyword">new</span> ArrayList&lt;Float&gt;();</span><br><span class="line">            &#125;</span><br><span class="line">            tempList.add(temp);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (humidityList == <span class="keyword">null</span>) &#123;</span><br><span class="line">                humidityList = <span class="keyword">new</span> ArrayList&lt;Float&gt;();</span><br><span class="line">            &#125;</span><br><span class="line">            humidityList.add(humidity);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (pressureList == <span class="keyword">null</span>) &#123;</span><br><span class="line">                pressureList = <span class="keyword">new</span> ArrayList&lt;Float&gt;();</span><br><span class="line">            &#125;</span><br><span class="line">            pressureList.add(pressure);</span><br><span class="line">            </span><br><span class="line">            display();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="HeatIndexDisplay">HeatIndexDisplay</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HeatIndexDisplay</span> <span class="keyword">implements</span> <span class="title">Observer</span>, <span class="title">DisplayElement</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Observable observable;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HeatIndexDisplay</span><span class="params">(Observable observable)</span></span>&#123;</span><br><span class="line">        observable.addObserver(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">this</span>.observable = observable;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unregister</span><span class="params">()</span></span>&#123;</span><br><span class="line">        observable.deleteObserver(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"当前酷热指数:"</span> + getHeatIndex());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">float</span> <span class="title">getHeatIndex</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">float</span> heatIndex = <span class="number">0F</span>;</span><br><span class="line">        heatIndex = (<span class="keyword">float</span>) (temp*Math.PI + humidity*Math.E + pressure*<span class="number">1.01315</span>)/<span class="number">5</span>;</span><br><span class="line">        <span class="keyword">return</span> heatIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> temp;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> humidity;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> pressure;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Observable o, Object arg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (o <span class="keyword">instanceof</span> WeatherData) &#123;</span><br><span class="line">            WeatherData weatherData = (WeatherData) o;</span><br><span class="line">            <span class="keyword">this</span>.temp = weatherData.getTemp();</span><br><span class="line">            <span class="keyword">this</span>.humidity = weatherData.getHumidity();</span><br><span class="line">            <span class="keyword">this</span>.pressure = weatherData.getPressure();</span><br><span class="line">            display();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="测试类">测试类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WeatherStation</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        WeatherData weatherData = <span class="keyword">new</span> WeatherData();</span><br><span class="line">        </span><br><span class="line">        CurrentConditionsDisplay currentDisplay = <span class="keyword">new</span> CurrentConditionsDisplay(weatherData);</span><br><span class="line">        AvgStateDisplay stateDisplay = <span class="keyword">new</span> AvgStateDisplay(weatherData);</span><br><span class="line">        HeatIndexDisplay heatIndexDisplay = <span class="keyword">new</span> HeatIndexDisplay(weatherData);</span><br><span class="line">        </span><br><span class="line">        weatherData.setWeatherData(<span class="number">25.0F</span>, <span class="number">80F</span>, <span class="number">1.01F</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        weatherData.setWeatherData(<span class="number">26.2F</span>, <span class="number">76F</span>, <span class="number">1.02F</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        weatherData.setWeatherData(<span class="number">27.8F</span>, <span class="number">70F</span>, <span class="number">1.01F</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>测试结果如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">当前酷热指数:<span class="number">59.40513</span></span><br><span class="line">平均气温:<span class="number">25.0</span>,平均湿度:<span class="number">80.0</span>,平均压强:<span class="number">1.01</span></span><br><span class="line">CurrentConditions[temp=<span class="number">25.0</span>, humidity=<span class="number">80.0</span>, pressure=<span class="number">1.01</span>]</span><br><span class="line">当前酷热指数:<span class="number">57.98651</span></span><br><span class="line">平均气温:<span class="number">25.6</span>,平均湿度:<span class="number">78.0</span>,平均压强:<span class="number">1.015</span></span><br><span class="line">CurrentConditions[temp=<span class="number">26.2</span>, humidity=<span class="number">76.0</span>, pressure=<span class="number">1.02</span>]</span><br><span class="line">当前酷热指数:<span class="number">55.727856</span></span><br><span class="line">平均气温:<span class="number">26.333334</span>,平均湿度:<span class="number">75.333336</span>,平均压强:<span class="number">1.0133333</span></span><br><span class="line">CurrentConditions[temp=<span class="number">27.8</span>, humidity=<span class="number">70.0</span>, pressure=<span class="number">1.01</span>]</span><br></pre></td></tr></table></figure></p>
<p>从上面的结果可以看出与自定义的观察者模式显示的一致.</p>
<h2 id="总结">总结</h2><p>观察者模式的使用过程如下:</p>
<ol>
<li>数据变化的对象继承Observable类.在数据变化后调用setChanged()方法.</li>
<li>观察者类实现Observer接口,并重新update()方法.</li>
<li>使用时用观察者内部持有的可观察接口注册与解除注册为观察者.</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="故事概要">故事概要</h2><h3 id="概要">概要</h3><p>故事要从一个业务需求开始:</p>
<blockquote>
<p>天气监测站目前可以监测到气温,气压,湿度三种指标,有一个WeatherData类,当前面的三个数据发生变化时,就会调用WeatherData类的setWeatherData()方法,改变天气数据.</p>
</blockquote>
<p>现在要求:需要有两个显示装置显示现在的状态和平均状态.当监测的数据有变化时,就更新显示.而且需要提供给第三方的人员可调用这些数据以设置想要的显示装置.如下图:</p>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[CleanCode笔记---有意义的命名]]></title>
    <link href="http://yoursite.com/2015/06/18/CleanCode-Note-Name/"/>
    <id>http://yoursite.com/2015/06/18/CleanCode-Note-Name/</id>
    <published>2015-06-18T04:45:17.000Z</published>
    <updated>2015-06-18T11:22:06.884Z</updated>
    <content type="html"><![CDATA[<h3 id="1-_命名应该和实际意义相符合">1. 命名应该和实际意义相符合</h3><p><strong>反例:</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> w;</span><br><span class="line"><span class="keyword">int</span> h;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> w*h;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>从代码中看不出任何信息,w和h是何含义?</p>
<p>不如改为:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> width;</span><br><span class="line"><span class="keyword">int</span> height;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">calculateArea</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> width*height;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这样没有注释也能看懂代码的意图.</p>
<a id="more"></a>
<hr>
<h3 id="2-避免误导">2.避免误导</h3><p>如果仅仅给你一个accountList,很容易让人误以为是一个账户类表.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Account[] accountList;</span><br><span class="line"></span><br><span class="line"><span class="comment">//此处又很长的代码</span></span><br><span class="line"></span><br><span class="line">accountList = getAccountList(); <span class="comment">//你能辨别出accountList是什么吗?</span></span><br></pre></td></tr></table></figure></p>
<p>为了避免误导,应该改为:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Account[] accountGroup;</span><br><span class="line"></span><br><span class="line"><span class="comment">//此处又很长的代码</span></span><br><span class="line"></span><br><span class="line">accountGroup = getAccountGroup(); <span class="comment">//你能辨别出accountGroup是什么吗?</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="3-做有意义的区分">3.做有意义的区分</h3><p>现在有三个类:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountInfo</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountData</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure></p>
<p>仅仅从类名你能区分这三个类有什么区别吗?<br>既然要区分他们就应该取一个有意义的名称区分.</p>
<hr>
<h3 id="4-用读得出的名称">4.用读得出的名称</h3><p>有的程序员喜欢用自造的词语,比如:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lxmcreateData</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//代码内容</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>你能读出来上面函数的名称吗?函数本意是想创造数据,但是lxm是什么意思?翻到类头注释才知道,作者叫Lixiaoming.<br>如果改为下面这样,是不是更好读呢?<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createData</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//代码内容</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="5-用可搜索的名称">5.用可搜索的名称</h3><p>经常在代码中可以见到类似a,b,w,h,e等这样的命名,而且同一个类中多次出现,特别是作为临时变量的i,j,k.当想查找时,编辑器也不知道你想要查找哪一个.<br>例如:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> List&lt;Student&gt; studentList;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getMathAvgScore</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; studentList.size(); i++)&#123;</span><br><span class="line">    	s = s + studentList.get(i).getMathScore();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">float</span> a = s/studentList.size();</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getAvgScore</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">float</span> s = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; studentList.size(); i++)&#123;</span><br><span class="line">    	s = s + studentList.get(i).getTotalScore();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">float</span> a = s/studentList.size();</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>如果改为下面这样,你觉得哪个更好呢?<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> List&lt;Student&gt; studentList;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getMathAvgScore</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> mathTotalScore = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(Student student : studentList)&#123;</span><br><span class="line">    	mathTotalScore = mathTotalScore + student.getMathScore();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">float</span> mathAvgScore = mathTotalScore/studentList.size();</span><br><span class="line">    <span class="keyword">return</span> mathAvgScore;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getAvgScore</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">float</span> totalScore = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(Student student : studentList)&#123;</span><br><span class="line">    	totalScore = totalScore + student.getTotalScore();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">float</span> avgTotalScore = totalScore/studentList.size();</span><br><span class="line">    <span class="keyword">return</span> avgTotalScore;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="6-不要使用命名编码">6.不要使用命名编码</h3><p>什么是命名编码?就像前面的lxmcreateData()函数名就是命名编码.</p>
<h4 id="命名前缀">命名前缀</h4><p>就像前面的lxmcreateData()一样,该类中存在很多类似lxmXXX的函数,变量.<br><strong>在命名时应避免使用这样的前缀</strong></p>
<h4 id="命名后缀">命名后缀</h4><p>使用Eclipse时,我们生命一个变量时,往往会给出命名提示:</p>
<pre><code><span class="keyword">String </span>nameString
</code></pre><p>这是很不必要的,不需要在变量后面都带上该变量的类型,除非该变量的命名不足以表现出其类型.</p>
<hr>
<h3 id="7-避免思维映射">7.避免思维映射</h3><p>每一个变量应明确其含义,不要让人在大脑中给其一个含义映射!<br>比如:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; studentList.size(); i++)&#123;</span><br><span class="line">    s = s + studentList.get(i).getMathScore();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>与下面相比:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(Student student : studentList)&#123;</span><br><span class="line">    mathTotalScore = mathTotalScore + student.getMathScore();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>下面的代码更直观,而上面的代码会让人去记住s代表什么含义.</p>
<hr>
<h3 id="8-类名">8.类名</h3><p>类名和对象名应该是名词活名词短语,如Customer,WikiPage,Account,AccountParser等,避免使用Manager,Processor,Data,Info等这样的类名.类名不应该是动词.</p>
<hr>
<h3 id="9-方法名">9.方法名</h3><p>方法名应该是动词或动词短语,如postPayment,deletePage或save.<br>属性访问与修改和断言应该根据其命名,并依照javabean标准加上get,set,is前缀.<br>如:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String name = person.getName();</span><br><span class="line"></span><br><span class="line">person.setName(<span class="string">"Jack"</span>);</span><br><span class="line"></span><br><span class="line">player.isPlaying();</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="10-别装幽默">10.别装幽默</h3><p>命名应该是直来直去的名称,不要使用一些俗语或俚语(不要以为别人都和你一样英文阅历很深).<br>别用whack()来表示kill().</p>
<hr>
<h3 id="11-每个概念对应一个词">11.每个概念对应一个词</h3><p>如果你要写一个控制类,比如控制音频类.如果使用了AudioManager就不要在使用AudioController.否则别人是弄不懂二者之间区别.</p>
<hr>
<h3 id="12-别用双关语">12.别用双关语</h3><p>比如add一词又很多含义,不要为了保持方法名一致就命名为add.<br>把单个条目放到集合中可以用put,不要用add;<br>把单个条目放大数据库中可用insert,不要用add.</p>
<hr>
<h3 id="13-使用解决方案领域的名称">13.使用解决方案领域的名称</h3><p>有时同一个事物在不同领域有不同的含义,在写代码的过程中要用和项目相关领域的词汇命名.</p>
<hr>
<h3 id="14-使用源自于所涉及问题领域的名称">14.使用源自于所涉及问题领域的名称</h3><p>尽量使用问题所在的领域的词语来命名,这样可以明确代码解决问题的领域.</p>
<hr>
<h3 id="15-添加有意义的语境">15.添加有意义的语境</h3><p>有些词语会有一词多义的现象,如果找不到代替该词更好名称,那么至少给该词添加能明确含义的语境.</p>
<hr>
<h3 id="16-不要添加没用的语境-">16.不要添加没用的语境.</h3><p>就像前面的lxmcreateData()一样,前缀lxm是没有任何含义的.一定不要附带这样的没有意义的语境.</p>
]]></content>
    <summary type="html">
    <![CDATA[整洁的代码的各种命名应该是言简意赅,简洁明了,让人一看名称就能明白该变量,方法,类等的用途.]]>
    
    </summary>
    
      <category term="CleanCode" scheme="http://yoursite.com/tags/CleanCode/"/>
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
</feed>